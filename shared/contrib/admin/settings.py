"""
Django settings for django_app project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import environ

env = environ.Env(DEBUG=(bool, False))  # set default values and casting
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "a8m7&irp9qcdn=8-_*ag)qu@+k8o!_)dn90esu(4e%jp-bz!*s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition
def additional_apps(apps):
    return apps

MIDDLEWARE = [
    # 'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
def configure_db(default_env_name="SERVICE_DATABASE_URL", service_env_name="DATABASE_URL",
default_db="",service_db=""):
    DATABASES = {
        # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ
        "default": env.db("SERVICE_DATABASE_URL", default=default_db),
        "services": env.db("DATABASE_URL", default=service_db),
        # 'replica': env.db('REPLICA_DATABASE_URL', default='postgres://tuteria:punnisher@127.0.0.1:5435/tuteria')
    }
    DATABASES["default"]["ATOMIC_REQUESTS"] = True
    return DATABASES

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
